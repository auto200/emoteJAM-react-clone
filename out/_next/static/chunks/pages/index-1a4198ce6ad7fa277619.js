(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{5900:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return U}});var i=t(5893),r=t(9999),o=t(980),a=t(4096),l=t(336),c=t(4115),s=t(8017),u=t(4003),f=t(829),m=t(8482),v=t(2202),d=t(9444),g=t(7294),p=function(n){var e=n.handleFileDrop,t=(0,g.useState)(!1),r=t[0],o=t[1];return(0,g.useEffect)((function(){var n=0,t=function(e){var t;e.preventDefault(),e.stopPropagation(),n++,"file"===(null===e||void 0===e||null===(t=e.dataTransfer)||void 0===t?void 0:t.items[0].kind)&&o(!0)},i=function(e){e.preventDefault(),e.stopPropagation(),0===--n&&o(!1)},r=function(n){n.preventDefault(),n.stopPropagation()},a=function(t){t.preventDefault(),t.stopPropagation(),e(t),n=0,o(!1)};return window.addEventListener("dragenter",t),window.addEventListener("dragleave",i),window.addEventListener("dragover",r),window.addEventListener("drop",a),function(){window.removeEventListener("dragenter",t),window.removeEventListener("dragleave",i),window.removeEventListener("dragover",r),window.removeEventListener("drop",a)}}),[]),r?(0,i.jsx)(a.k,{pos:"fixed",top:"0",left:"0",w:"100%",h:"100%",bgColor:"rgba(0, 0, 0, 0.75)",alignItems:"center",justifyContent:"center",p:"25px",zIndex:"10",children:(0,i.jsx)(a.k,{alignItems:"center",justifyContent:"center",textAlign:"center",border:"5px dashed",borderColor:"slategray",w:"full",h:"full",children:(0,i.jsx)(l.X,{size:"4xl",children:"Drop It Like It's Hot"})})}):null},_=t(6265),h=t(4121),x=112;function w(n,e){var t;if("undefined"===typeof Symbol||null==n[Symbol.iterator]){if(Array.isArray(n)||(t=function(n,e){if(!n)return;if("string"===typeof n)return y(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);"Object"===t&&n.constructor&&(t=n.constructor.name);if("Map"===t||"Set"===t)return Array.from(n);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return y(n,e)}(n))||e&&n&&"number"===typeof n.length){t&&(n=t);var i=0,r=function(){};return{s:r,n:function(){return i>=n.length?{done:!0}:{done:!1,value:n[i++]}},e:function(n){throw n},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,l=!1;return{s:function(){t=n[Symbol.iterator]()},n:function(){var n=t.next();return a=n.done,n},e:function(n){l=!0,o=n},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw o}}}}function y(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,i=new Array(e);t<e;t++)i[t]=n[t];return i}function P(n,e,t){var i=k(n,e.vertex,n.VERTEX_SHADER),r=k(n,e.fragment,n.FRAGMENT_SHADER);if(!i||!r)return null;var o=function(n,e,t){var i=n.createProgram();if(!i)return null;var r,o=w(e);try{for(o.s();!(r=o.n()).done;){var a=r.value;n.attachShader(i,a)}}catch(c){o.e(c)}finally{o.f()}for(var l in t)n.bindAttribLocation(i,t[l],l);if(n.linkProgram(i),!n.getProgramParameter(i,n.LINK_STATUS))throw new Error("Could not link shader program: ".concat(n.getProgramInfoLog(i)));return i}(n,[i,r],t);return o?(n.deleteShader(i),n.deleteShader(r),n.useProgram(o),{id:o,resolutionUniform:n.getUniformLocation(o,"resolution"),timeUniform:n.getUniformLocation(o,"time"),duration:e.duration}):null}function k(n,e,t){var i=n.createShader(t);if(!i)return null;if(n.shaderSource(i,e),n.compileShader(i),!n.getShaderParameter(i,n.COMPILE_STATUS))throw new Error("Could not compile ".concat(function(n,e){switch(e){case n.VERTEX_SHADER:return"Vertex";case n.FRAGMENT_SHADER:return"Fragment";default:return e}}(n,t)," shader: ").concat(n.getShaderInfoLog(i)));return i}var b=function(n){var e=n.filter,t=n.vertexAttribs,r=n.imageSrc,o=n.setRenderDataInfo,a=(0,g.useRef)(null),l=(0,g.useRef)(),c=(0,g.useRef)(),s=(0,g.useRef)();return(0,g.useEffect)((function(){var n,i=null===(n=a.current)||void 0===n?void 0:n.getContext("webgl",{antialias:!1});if(i){l.current=i,i.enable(i.BLEND),i.blendFunc(i.SRC_ALPHA,i.ONE_MINUS_SRC_ALPHA);var r=P(i,e,t);c.current=r;for(var o=new Float32Array(12),s=0;s<2;++s)for(var u=0;u<3;++u){var f=s+u,m=3*s*2+2*u;o[m+0]=2*(1&f)-1,o[m+1]=2*(f>>1&1)-1}var v=i.createBuffer();i.bindBuffer(i.ARRAY_BUFFER,v),i.bufferData(i.ARRAY_BUFFER,o,i.STATIC_DRAW);var d,g=t.meshPosition;i.vertexAttribPointer(g,2,i.FLOAT,!1,0,0),i.enableVertexAttribArray(g);window.requestAnimationFrame((function n(e){c.current&&a.current&&(void 0===d&&(d=e),d=e,i.uniform1f(c.current.timeUniform,.001*d),i.uniform2f(c.current.resolutionUniform,a.current.width,a.current.height),i.clearColor(0,0,0,0),i.clear(i.COLOR_BUFFER_BIT),i.drawArrays(i.TRIANGLES,0,6),window.requestAnimationFrame(n))}))}}),[]),(0,g.useEffect)((function(){var n=new Image(x,x);n.src=r,n.addEventListener("load",(function(){if(l.current){s.current&&l.current.deleteTexture(s.current);var e=function(n,e){var t=n.createTexture();return n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),t}(l.current,n);e&&(s.current=e)}}))}),[r]),(0,g.useEffect)((function(){if(l.current&&c.current){l.current.deleteProgram(c.current.id);var n=P(l.current,e,t);c.current=n}}),[e]),(0,g.useEffect)((function(){l.current&&a.current&&c.current&&o(l.current,a.current,c.current)}),[l.current,a.current,c.current]),(0,i.jsx)("canvas",{ref:a,width:"".concat(x,"px"),height:"".concat(x,"px")})};function E(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,i)}return t}function C(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?E(Object(t),!0).forEach((function(e){(0,_.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):E(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var j=function(n){var e=n.filters,t=n.currentFilterName,r=n.onClick,o=n.setRenderData,l=n.vertexAttribs,s=n.uploadedImageSrc;return(0,i.jsx)(a.k,{wrap:"wrap",justifyContent:"center",children:Object.entries(e).map((function(n){var e=(0,h.Z)(n,2),u=e[0],f=e[1];return(0,i.jsxs)(a.k,{flexDirection:"column",textAlign:"center",m:"15px",p:"20px",pt:"5px",outline:t===u?"4px solid":"1px solid",outlineColor:t===u?"gray.100":"gray.700",onClick:function(){return r(u)},_hover:{cursor:"pointer"},children:[(0,i.jsx)(c.x,{mt:"0",fontWeight:"bold",children:u}),(0,i.jsx)(b,{filter:f,vertexAttribs:l,imageSrc:s,setRenderDataInfo:function(n,e,t){o((function(i){return C(C({},i),{},(0,_.Z)({},u,[n,e,t]))}))}})]},u)}))})},D={Hop:{duration:1.7,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\nuniform float time;\n\nvarying vec2 uv;\n\nfloat sliding_from_left_to_right(float time_interval) {\n    return (mod(time, time_interval) - time_interval * 0.5) / (time_interval * 0.5);\n}\n\nfloat flipping_directions(float time_interval) {\n    return 1.0 - 2.0 * mod(floor(time / time_interval), 2.0);\n}\n\nvoid main() {\n    float scale = 0.40;\n    float hops = 2.0;\n    float x_time_interval = 0.85;\n    float y_time_interval = x_time_interval / (2.0 * hops);\n    float height = 0.5;\n    vec2 offset = vec2(\n        sliding_from_left_to_right(x_time_interval) * flipping_directions(x_time_interval) * (1.0 - scale),\n        ((sliding_from_left_to_right(y_time_interval) * flipping_directions(y_time_interval) + 1.0) / 4.0) - height);\n\n    gl_Position = vec4(\n        meshPosition * scale + offset,\n        0.0,\n        1.0);\n\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n\n    uv.x = (flipping_directions(x_time_interval) + 1.0) / 2.0 - uv.x * flipping_directions(x_time_interval);\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Hopper:{duration:.85,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\nuniform float time;\n\nvarying vec2 uv;\n\nfloat sliding_from_left_to_right(float time_interval) {\n    return (mod(time, time_interval) - time_interval * 0.5) / (time_interval * 0.5);\n}\n\nfloat flipping_directions(float time_interval) {\n    return 1.0 - 2.0 * mod(floor(time / time_interval), 2.0);\n}\n\nvoid main() {\n    float scale = 0.40;\n    float hops = 2.0;\n    float x_time_interval = 0.85 / 2.0;\n    float y_time_interval = x_time_interval / (2.0 * hops);\n    float height = 0.5;\n    vec2 offset = vec2(\n        sliding_from_left_to_right(x_time_interval) * flipping_directions(x_time_interval) * (1.0 - scale),\n        ((sliding_from_left_to_right(y_time_interval) * flipping_directions(y_time_interval) + 1.0) / 4.0) - height);\n\n    gl_Position = vec4(\n        meshPosition * scale + offset,\n        0.0,\n        1.0);\n\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n\n    uv.x = (flipping_directions(x_time_interval) + 1.0) / 2.0 - uv.x * flipping_directions(x_time_interval);\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Overheat:{duration:.2125,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\nuniform float time;\n\nvarying vec2 uv;\n\nfloat sliding_from_left_to_right(float time_interval) {\n    return (mod(time, time_interval) - time_interval * 0.5) / (time_interval * 0.5);\n}\n\nfloat flipping_directions(float time_interval) {\n    return 1.0 - 2.0 * mod(floor(time / time_interval), 2.0);\n}\n\nvoid main() {\n    float scale = 0.40;\n    float hops = 2.0;\n    float x_time_interval = 0.85 / 8.0;\n    float y_time_interval = x_time_interval / (2.0 * hops);\n    float height = 0.5;\n    vec2 offset = vec2(\n        sliding_from_left_to_right(x_time_interval) * flipping_directions(x_time_interval) * (1.0 - scale),\n        ((sliding_from_left_to_right(y_time_interval) * flipping_directions(y_time_interval) + 1.0) / 4.0) - height);\n\n    gl_Position = vec4(\n        meshPosition * scale + offset,\n        0.0,\n        1.0);\n\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n\n    uv.x = (flipping_directions(x_time_interval) + 1.0) / 2.0 - uv.x * flipping_directions(x_time_interval);\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y)) * vec4(1.0, 0.0, 0.0, 1.0);\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Bounce:{duration:Math.PI/5,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    float scale = 0.30;\n    float period_interval = 5.0;\n    vec2 offset = vec2(0.0, (2.0 * abs(sin(time * period_interval)) - 1.0) * (1.0 - scale));\n    gl_Position = vec4(meshPosition * scale + offset, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Circle:{duration:Math.PI/4,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvoid main() {\n    float scale = 0.30;\n    float period_interval = 8.0;\n    float pi = 3.141592653589793238;\n    vec2 outer_circle = vec2(cos(period_interval * time), sin(period_interval * time)) * (1.0 - scale);\n    vec2 inner_circle = rotate(meshPosition * scale, (-period_interval * time) + pi / 2.0);\n    gl_Position = vec4(\n        inner_circle + outer_circle,\n        0.0,\n        1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    float speed = 1.0;\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Slide:{duration:1.7,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\nuniform float time;\n\nvarying vec2 uv;\n\nfloat sliding_from_left_to_right(float time_interval) {\n    return (mod(time, time_interval) - time_interval * 0.5) / (time_interval * 0.5);\n}\n\nfloat flipping_directions(float time_interval) {\n    return 1.0 - 2.0 * mod(floor(time / time_interval), 2.0);\n}\n\nvoid main() {\n    float scale = 0.40;\n    float hops = 2.0;\n    float x_time_interval = 0.85;\n    float y_time_interval = x_time_interval / (2.0 * hops);\n    float height = 0.5;\n    vec2 offset = vec2(\n        sliding_from_left_to_right(x_time_interval) * flipping_directions(x_time_interval) * (1.0 - scale),\n        - height);\n\n    gl_Position = vec4(\n        meshPosition * scale + offset,\n        0.0,\n        1.0);\n\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n\n    uv.x = (flipping_directions(x_time_interval) + 1.0) / 2.0 - uv.x * flipping_directions(x_time_interval);\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Laughing:{duration:Math.PI/12,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    float a = 0.3;\n    float t = (sin(24.0 * time) * a + a) / 2.0;\n\n    gl_Position = vec4(\n        meshPosition - vec2(0.0, t),\n        0.0,\n        1.0);\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Blob:{duration:Math.PI/3,vertex:"#version 100\n\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    float stretch = sin(6.0 * time) * 0.5 + 1.0;\n\n    vec2 offset = vec2(0.0, 1.0 - stretch);\n    gl_Position = vec4(\n        meshPosition * vec2(stretch, 2.0 - stretch) + offset,\n        0.0,\n        1.0);\n    uv = (meshPosition + vec2(1.0, 1.0)) / 2.0;\n}\n",fragment:"#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Go:{duration:1/4,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_Position = vec4(meshPosition, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nfloat slide(float speed, float value) {\n    return mod(value - speed * time, 1.0);\n}\n\nvoid main() {\n    float speed = 4.0;\n    gl_FragColor = texture2D(emote, vec2(slide(speed, uv.x), 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Elevator:{duration:1/4,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_Position = vec4(meshPosition, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nfloat slide(float speed, float value) {\n    return mod(value - speed * time, 1.0);\n}\n\nvoid main() {\n    float speed = 4.0;\n    gl_FragColor = texture2D(\n        emote,\n        vec2(uv.x, slide(speed, 1.0 - uv.y)));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Rain:{duration:1,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_Position = vec4(meshPosition, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nfloat slide(float speed, float value) {\n    return mod(value - speed * time, 1.0);\n}\n\nvoid main() {\n    float speed = 1.0;\n    gl_FragColor = texture2D(\n        emote,\n        vec2(mod(4.0 * slide(speed, uv.x), 1.0),\n             mod(4.0 * slide(speed, 1.0 - uv.y), 1.0)));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Pride:{duration:2,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_Position = vec4(meshPosition, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvec3 hsl2rgb(vec3 c) {\n    vec3 rgb = clamp(abs(mod(c.x*6.0+vec3(0.0,4.0,2.0),6.0)-3.0)-1.0, 0.0, 1.0);\n    return c.z + c.y * (rgb-0.5)*(1.0-abs(2.0*c.z-1.0));\n}\n\nvoid main() {\n    float speed = 1.0;\n\n    vec4 pixel = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    pixel.w = floor(pixel.w + 0.5);\n    pixel = vec4(mix(vec3(1.0), pixel.xyz, pixel.w), 1.0);\n    vec4 rainbow = vec4(hsl2rgb(vec3((time - uv.x - uv.y) * 0.5, 1.0, 0.80)), 1.0);\n    gl_FragColor = pixel * rainbow;\n}\n"},Hard:{duration:2*Math.PI/32,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    float zoom = 1.4;\n    float intensity = 32.0;\n    float amplitude = 1.0 / 8.0;\n    vec2 shaking = vec2(cos(intensity * time), sin(intensity * time)) * amplitude;\n    gl_Position = vec4(meshPosition * zoom + shaking, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"},Peek:{duration:2*Math.PI,vertex:"#version 100\nprecision mediump float;\n\nattribute vec2 meshPosition;\n\nuniform vec2 resolution;\nuniform float time;\n\nvarying vec2 uv;\n\nvoid main() {\n    float time_clipped= mod(time * 2.0, (4.0 * 3.14));\n\n    float s1 = float(time_clipped < (2.0 * 3.14));\n    float s2 = 1.0 - s1;\n\n    float hold1 = float(time_clipped > (0.5 * 3.14) && time_clipped < (2.0 * 3.14));\n    float hold2 = 1.0 - float(time_clipped > (2.5 * 3.14) && time_clipped < (4.0 * 3.14));\n\n    float cycle_1 = 1.0 - ((s1 * sin(time_clipped) * (1.0 - hold1)) + hold1);\n    float cycle_2 = s2 * hold2 * (sin(time_clipped) - 1.0); \n\n    gl_Position = vec4(meshPosition.x + 1.0 + cycle_1 + cycle_2 , meshPosition.y, 0.0, 1.0);\n    uv = (meshPosition + 1.0) / 2.0;\n}\n",fragment:"\n#version 100\n\nprecision mediump float;\n\nuniform vec2 resolution;\nuniform float time;\n\nuniform sampler2D emote;\n\nvarying vec2 uv;\n\nvoid main() {\n    gl_FragColor = texture2D(emote, vec2(uv.x, 1.0 - uv.y));\n    gl_FragColor.w = floor(gl_FragColor.w + 0.5);\n}\n"}},F=t(3166),R=t(3750),A=t(6653),T=function(){return(0,i.jsx)(d.r,{isExternal:!0,href:"https://github.com/auto200/emoteJAM-react-clone",pos:["absolute",null,"fixed"],top:"8px",right:"8px",fontSize:"4xl",zIndex:"10",children:(0,i.jsx)(A.Jmn,{})})},S=["/kekw/".concat(0,".gif"),"/kekw/".concat(1,".gif"),"/kekw/".concat(2,".gif"),"/kekw/".concat(3,".gif"),"/kekw/".concat(4,".gif"),"/kekw/".concat(5,".gif"),"/kekw/".concat(6,".gif"),"/kekw/".concat(7,".gif"),"/kekw/".concat(8,".gif"),"/kekw/".concat(9,".gif"),"/kekw/".concat(10,".gif"),"/kekw/".concat(11,".gif"),"/kekw/".concat(12,".gif"),"/kekw/".concat(13,".gif"),"/kekw/".concat(14,".gif"),"/kekw/".concat(15,".gif"),"/kekw/".concat(16,".gif"),"/kekw/".concat(17,".gif"),"/kekw/".concat(18,".gif"),"/kekw/".concat(19,".gif"),"/kekw/".concat(20,".gif"),"/kekw/".concat(21,".gif"),"/kekw/".concat(22,".gif"),"/kekw/".concat(23,".gif"),"/kekw/".concat(24,".gif"),"/kekw/".concat(25,".gif"),"/kekw/".concat(26,".gif"),"/kekw/".concat(27,".gif"),"/kekw/".concat(28,".gif"),"/kekw/".concat(29,".gif"),"/kekw/".concat(30,".gif"),"/kekw/".concat(31,".gif")],I=function(){return(0,i.jsx)(a.k,{mt:"100px",mb:"15px",children:(0,i.jsx)(d.r,{isExternal:!0,href:"https://github.com/tsoding/emoteJAM",fontSize:"xx-small",children:"Check out Tsoding's original version of the app"})})},L=t(1186),O={meshPosition:0},U=function(){var n=(0,g.useState)("initial"),e=n[0],t=n[1],_=(0,g.useState)(""),h=_[0],w=_[1],y=(0,g.useState)(""),P=y[0],k=y[1],b=(0,g.useState)("/imgs/tsodinClown.png"),E=b[0],C=b[1],A=(0,g.useState)({}),U=A[0],B=A[1],G=(0,g.useState)({name:"",src:""}),z=G[0],H=G[1],W=(0,o.useColorMode)(),V=W.colorMode,Y=W.toggleColorMode,Z=(0,o.useToast)(),q=(0,g.useRef)(null),J=(0,g.useRef)(),$=(0,g.useRef)({});(0,g.useEffect)((function(){"light"===V&&Y(),document.createElement("canvas").getContext("webgl")||k("Could not initialize WebGL context")}),[]),(0,g.useEffect)((function(){if(E){Object.values($.current).map((function(n){var e=n.src;return URL.revokeObjectURL(e)})),$.current={};var n=new window.Image;n.src=E,n.addEventListener("error",(function(){q.current&&(q.current.value="",C("/imgs/error.png"),Z({title:"Failed to convert image",status:"error",position:"bottom-left"}))}))}}),[E]),(0,g.useEffect)((function(){var n,e;if(U[h]&&q.current){var i=$.current[h];if(i)H(i);else{t("rendering"),null!==(n=J.current)&&void 0!==n&&n.running&&J.current.abort();var o=null===(e=q.current.files)||void 0===e?void 0:e[0],a=o?N(o.name):"result";J.current=X.apply(void 0,(0,r.Z)(U[h])),J.current.on("finished",(function(n){var e={name:"".concat(a,"-").concat(h,".gif"),src:URL.createObjectURL(n)};$.current[h]=e,H(e),J.current.abort(),t("rendered")}))}}}),[h]);var K=function(n){t("initial"),C(URL.createObjectURL(n)),H({name:"",src:""}),w("")};return(0,i.jsxs)(a.k,{justifyContent:"center",children:[(0,i.jsx)(L,{url:S,animate:!0,animationDelay:50}),(0,i.jsx)(T,{}),(0,i.jsxs)(a.k,{maxW:"800px",p:"0 10px",textAlign:"center",justifyContent:"center",alignItems:"center",flexDir:"column",children:[P||(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(p,{handleFileDrop:function(n){var e,t,i=null===(e=n.dataTransfer)||void 0===e||null===(t=e.files)||void 0===t?void 0:t[0];i&&K(i)}}),(0,i.jsx)(l.X,{mt:"50px",mb:"5px",children:"Upload an image to animate"}),(0,i.jsxs)(c.x,{children:["Fully"," ",(0,i.jsx)(c.x,{as:"span",fontWeight:"bold",background:"black",px:"3px",children:"Black (#000000)"})," ","color is not supported and will become tansparent on rendered gif"]}),(0,i.jsxs)(a.k,{w:"90%",h:"175px",mt:"25px",border:"5px dashed",borderColor:"limegreen",textAlign:"center",justifyContent:"center",alignItems:"center",flexDirection:"column",onClick:function(){var n;null===(n=q.current)||void 0===n||n.click()},_hover:{cursor:"pointer"},pos:"relative",children:[(0,i.jsx)(M,{step:1}),"Select or drop an image",(0,i.jsx)(s.xu,{fontSize:"3xl",children:(0,i.jsx)(R.eMk,{})}),(0,i.jsx)("input",{ref:q,style:{display:"none"},type:"file",onChange:function(n){var e,t=null===(e=n.target.files)||void 0===e?void 0:e[0];t&&K(t)}})]}),(0,i.jsxs)(s.xu,{pos:"relative",w:"90%",m:"15px",children:[(0,i.jsx)(M,{step:2}),(0,i.jsx)(l.X,{mt:"15px",mb:"5px",children:"Pick a filter:"})]}),(0,i.jsx)(j,{filters:D,currentFilterName:h,setRenderData:B,onClick:function(n){w(n)},vertexAttribs:O,uploadedImageSrc:E}),(0,i.jsx)(u.i,{m:"10px",mb:"0"}),(0,i.jsxs)(s.xu,{pos:"relative",w:"90%",mb:"15px",pt:"10px",children:[(0,i.jsx)(M,{step:3}),(0,i.jsx)(l.X,{mt:"10px",children:"Get animated gif"})]}),(0,i.jsxs)(a.k,{w:"".concat(x,"px"),h:"".concat(x,"px"),alignItems:"center",justifyContent:"center",flexDirection:"column",outline:"initial"===e?"solid 2px red":"",children:["initial"===e&&(0,i.jsx)(s.xu,{children:"\u261d\ufe0fPick a filter to get the gif"}),"rendering"===e&&(0,i.jsx)(f.$,{size:"lg"}),"rendered"===e&&(0,i.jsx)(m.E,{src:z.src})]}),(0,i.jsx)(v.z,{w:"140px",m:"15px",as:d.r,isLoading:"rendering"===e,isDisabled:"initial"===e,loadingText:"Rendering",spinnerPlacement:"end",href:z.src,download:z.name,colorScheme:"teal",rightIcon:(0,i.jsx)(F._,{}),children:"Download"})]}),(0,i.jsx)(I,{})]})]})},M=function(n){var e=n.step;return(0,i.jsx)(s.xu,{pos:"absolute",top:"5px",left:"5px",children:(0,i.jsxs)(c.x,{color:"lightpink",fontWeight:"bold",children:["Step ",e]})})},N=function(n){return n.includes(".")?n.split(".").slice(0,-1).join("."):n},X=function(n,e,t){for(var i=new window.GIF({workers:5,quality:10,width:e.width,height:e.height,transparent:"rgba(0, 0, 0, 0)"}),r=1/30,o=t.duration,a=0;a<=o;){n.uniform1f(t.timeUniform,a),n.uniform2f(t.resolutionUniform,e.width,e.height),n.clearColor(0,0,0,1),n.clear(n.COLOR_BUFFER_BIT),n.drawArrays(n.TRIANGLES,0,6);var l=new Uint8ClampedArray(4*e.width*e.height);n.readPixels(0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,l);for(var c=Math.floor(e.height/2),s=0;s<c;++s)for(var u=4*e.width,f=0;f<u;++f){var m=4*s*e.width+f,v=4*(e.height-s-1)*e.width+f,d=l[m],g=l[v];l[m]=g,l[v]=d}i.addFrame(new ImageData(l,e.width,e.height),{delay:1e3*r,dispose:2}),a+=r}return i.render(),i}},5301:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(5900)}])}},function(n){n.O(0,[774,13,565,199],(function(){return e=5301,n(n.s=e);var e}));var e=n.O();_N_E=e}]);